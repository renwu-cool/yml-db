// Generated by CoffeeScript 2.5.1
var YamlDb;

import fs from 'fs-extra';

import yaml from 'js-yaml';

import isEqual from 'lodash/isEqual';

YamlDb = class YamlDb {
  constructor(file1) {
    this.file = file1;
    this.dict = yaml.load(this.yml()) || {};
  }

  get(key) {
    return this.dict[key];
  }

  yml() {
    var file;
    ({file} = this);
    if (fs.existsSync(file)) {
      return fs.readFileSync(file);
    }
    return "";
  }

  set(key, val) {
    var _set, i, write;
    _set = (k, v) => {
      var exist, old, w;
      exist = k in this.dict;
      if (exist) {
        old = this.dict[k];
        w = isEqual(old, v);
      } else {
        w = true;
      }
      if (w) {
        this.dict[k] = v;
      }
      return w || false;
    };
    if (key.constructor === Object) {
      write = false;
      for (i in key) {
        val = key[i];
        write |= _set(i, val);
      }
    } else {
      write = _set(key, val);
    }
    if (write) {
      fs.outputFileSync(this.file, yaml.dump(this.dict));
    }
    return write;
  }

};

export default function(file) {
  return new YamlDb(file + ".yml");
};

// not module.parent and do =>
//   test = module.exports("/tmp/test")
//   test.set {
//     a:1
//     b:2
//   }
